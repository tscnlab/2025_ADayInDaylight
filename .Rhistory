# ggflags wants numeric x; convert discrete x to numeric positions
geom_flag(
aes(x = as.numeric(label),
y = score_klxh + max(score_klxh) * 0.1,
country = iso2),
size = 14
) +
scale_fill_manual(values = country_colors) +
labs(
title = "Run for the Sun - 48h category - Winners’ Podium",
subtitle = "Pedestal height shows total light exposure (klx·h)",
x = NULL, y = NULL
) +
coord_cartesian(ylim = c(0, max(df$score_klxh) * 1.25), clip = "off") +
theme_minimal(base_size = 13) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(face = "bold"),
plot.title = element_text(face = "bold"),
axis.text.y = element_blank(),
legend.position = "none",
plot.margin = margin(10, 30, 20, 20)
)
p
ggsave("figures/Fig8_pedestal.png", p)
# Base plot: pedestals
p <- ggplot(df, aes(x = label, y = score_klxh, fill = country)) +
geom_col(width = 0.7) +
# Score labels on the pedestals
geom_text(aes(label = paste0(score_klxh, " klx·h")),
vjust = -0.8, size = 4.2, fontface = "bold") +
geom_hline(yintercept = 0) +
# Flags slightly above each pedestal top
# ggflags wants numeric x; convert discrete x to numeric positions
geom_flag(
aes(x = as.numeric(label),
y = score_klxh - max(score_klxh) * 0.1,
country = iso2),
size = 14
) +
scale_fill_manual(values = country_colors) +
labs(
title = "Run for the Sun - 48h category - Winners’ Podium",
subtitle = "Pedestal height shows total light exposure (klx·h)",
x = NULL, y = NULL
) +
coord_cartesian(ylim = c(0, max(df$score_klxh) * 1.25), clip = "off") +
theme_minimal(base_size = 13) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(face = "bold"),
plot.title = element_text(face = "bold"),
axis.text.y = element_blank(),
legend.position = "none",
plot.margin = margin(10, 30, 20, 20)
)
p
ggsave("figures/Fig8_pedestal.png", p)
# Base plot: pedestals
p <- ggplot(df, aes(x = label, y = score_klxh, fill = country)) +
geom_col(width = 0.7) +
# Score labels on the pedestals
geom_text(aes(label = paste0(score_klxh, " klx·h")),
vjust = 0.8, size = 4.2, fontface = "bold") +
geom_hline(yintercept = 0) +
# Flags slightly above each pedestal top
# ggflags wants numeric x; convert discrete x to numeric positions
geom_flag(
aes(x = as.numeric(label),
y = score_klxh + max(score_klxh) * 0.15,
country = iso2),
size = 14
) +
scale_fill_manual(values = country_colors) +
labs(
title = "Run for the Sun - 48h category - Winners’ Podium",
subtitle = "Pedestal height shows total light exposure (klx·h)",
x = NULL, y = NULL
) +
coord_cartesian(ylim = c(0, max(df$score_klxh) * 1.25), clip = "off") +
theme_minimal(base_size = 13) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(face = "bold"),
plot.title = element_text(face = "bold"),
axis.text.y = element_blank(),
legend.position = "none",
plot.margin = margin(10, 30, 20, 20)
)
p
ggsave("figures/Fig8_pedestal.png", p)
ggsave("figures/Fig8_pedestal.png", p, width = 6, height = 6)
# Base plot: pedestals
p <- ggplot(df, aes(x = label, y = score_klxh, fill = country)) +
geom_col(width = 0.7) +
# Score labels on the pedestals
geom_text(aes(label = paste0(score_klxh, " klx·h")),
vjust = -0.8, size = 4.2, fontface = "bold") +
geom_hline(yintercept = 0) +
# Flags slightly above each pedestal top
# ggflags wants numeric x; convert discrete x to numeric positions
geom_flag(
aes(x = as.numeric(label),
y = score_klxh + max(score_klxh) * 0.15,
country = iso2),
size = 14
) +
scale_fill_manual(values = country_colors) +
labs(
title = "Run for the Sun - 48h category - Winners’ Podium",
subtitle = "Pedestal height shows total light exposure (klx·h)",
x = NULL, y = NULL
) +
coord_cartesian(ylim = c(0, max(df$score_klxh) * 1.25), clip = "off") +
theme_minimal(base_size = 13) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(face = "bold"),
plot.title = element_text(face = "bold"),
axis.text.y = element_blank(),
legend.position = "none",
plot.margin = margin(10, 30, 20, 20)
)
p
ggsave("figures/Fig8_pedestal.png", p, width = 6, height = 6)
# Base plot: pedestals
p <- ggplot(df, aes(x = label, y = score_klxh, fill = country)) +
geom_col(width = 0.7) +
# Score labels on the pedestals
geom_text(aes(label = paste0(score_klxh, " klx·h")),
vjust = -0.4, size = 4.2, fontface = "bold") +
geom_hline(yintercept = 0) +
# Flags slightly above each pedestal top
# ggflags wants numeric x; convert discrete x to numeric positions
geom_flag(
aes(x = as.numeric(label),
y = score_klxh + max(score_klxh) * 0.15,
country = iso2),
size = 14
) +
scale_fill_manual(values = country_colors) +
labs(
title = "Run for the Sun - 48h category - Winners’ Podium",
subtitle = "Pedestal height shows total light exposure (klx·h)",
x = NULL, y = NULL
) +
coord_cartesian(ylim = c(0, max(df$score_klxh) * 1.25), clip = "off") +
theme_minimal(base_size = 13) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(face = "bold"),
plot.title = element_text(face = "bold"),
axis.text.y = element_blank(),
legend.position = "none",
plot.margin = margin(10, 30, 20, 20)
)
p
ggsave("figures/Fig8_pedestal.png", p, width = 6, height = 6)
# Base plot: pedestals
p <- ggplot(df, aes(x = label, y = score_klxh, fill = country)) +
geom_col(width = 0.7) +
# Score labels on the pedestals
geom_text(aes(label = paste0(score_klxh, " klx·h"), y = -5),
vjust = -0.4, size = 4.2, fontface = "bold") +
geom_hline(yintercept = 0) +
# Flags slightly above each pedestal top
# ggflags wants numeric x; convert discrete x to numeric positions
geom_flag(
aes(x = as.numeric(label),
y = score_klxh + max(score_klxh) * 0.15,
country = iso2),
size = 14
) +
scale_fill_manual(values = country_colors) +
labs(
title = "Run for the Sun - 48h category - Winners’ Podium",
subtitle = "Pedestal height shows total light exposure (klx·h)",
x = NULL, y = NULL
) +
coord_cartesian(ylim = c(0, max(df$score_klxh) * 1.25), clip = "off") +
theme_minimal(base_size = 13) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(face = "bold"),
plot.title = element_text(face = "bold"),
axis.text.y = element_blank(),
legend.position = "none",
plot.margin = margin(10, 30, 20, 20)
)
p
ggsave("figures/Fig8_pedestal.png", p, width = 6, height = 6)
# Base plot: pedestals
p <- ggplot(df, aes(x = label, y = score_klxh, fill = country)) +
geom_col(width = 0.7) +
# Score labels on the pedestals
geom_text(aes(label = paste0(score_klxh, " klx·h"), y = -5),
# vjust = -0.4,
size = 4.2, fontface = "bold") +
geom_hline(yintercept = 0) +
# Flags slightly above each pedestal top
# ggflags wants numeric x; convert discrete x to numeric positions
geom_flag(
aes(x = as.numeric(label),
y = score_klxh + max(score_klxh) * 0.15,
country = iso2),
size = 14
) +
scale_fill_manual(values = country_colors) +
labs(
title = "Run for the Sun - 48h category - Winners’ Podium",
subtitle = "Pedestal height shows total light exposure (klx·h)",
x = NULL, y = NULL
) +
coord_cartesian(ylim = c(0, max(df$score_klxh) * 1.25), clip = "off") +
theme_minimal(base_size = 13) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(face = "bold"),
plot.title = element_text(face = "bold"),
axis.text.y = element_blank(),
legend.position = "none",
plot.margin = margin(10, 30, 20, 20)
)
p
ggsave("figures/Fig8_pedestal.png", p, width = 6, height = 6)
# Base plot: pedestals
p <- ggplot(df, aes(x = label, y = score_klxh, fill = country)) +
geom_col(width = 0.7) +
# Score labels on the pedestals
geom_text(aes(label = paste0(score_klxh, " klx·h"), y = -5),
vjust = -0.2,
size = 4.2, fontface = "bold") +
geom_hline(yintercept = 0) +
# Flags slightly above each pedestal top
# ggflags wants numeric x; convert discrete x to numeric positions
geom_flag(
aes(x = as.numeric(label),
y = score_klxh + max(score_klxh) * 0.15,
country = iso2),
size = 14
) +
scale_fill_manual(values = country_colors) +
labs(
title = "Run for the Sun - 48h category - Winners’ Podium",
subtitle = "Pedestal height shows total light exposure (klx·h)",
x = NULL, y = NULL
) +
coord_cartesian(ylim = c(0, max(df$score_klxh) * 1.25), clip = "off") +
theme_minimal(base_size = 13) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(face = "bold"),
plot.title = element_text(face = "bold"),
axis.text.y = element_blank(),
legend.position = "none",
plot.margin = margin(10, 30, 20, 20)
)
p
ggsave("figures/Fig8_pedestal.png", p, width = 6, height = 6)
# Base plot: pedestals
p <- ggplot(df, aes(x = label, y = score_klxh, fill = country)) +
geom_col(width = 0.7) +
# Score labels on the pedestals
geom_text(aes(label = paste0(score_klxh, " klx·h"), y = -5),
vjust = -0.3,
size = 4.2, fontface = "bold") +
geom_hline(yintercept = 0) +
# Flags slightly above each pedestal top
# ggflags wants numeric x; convert discrete x to numeric positions
geom_flag(
aes(x = as.numeric(label),
y = score_klxh + max(score_klxh) * 0.15,
country = iso2),
size = 14
) +
scale_fill_manual(values = country_colors) +
labs(
title = "Run for the Sun - 48h category - Winners’ Podium",
subtitle = "Pedestal height shows total light exposure (klx·h)",
x = NULL, y = NULL
) +
coord_cartesian(ylim = c(0, max(df$score_klxh) * 1.25), clip = "off") +
theme_minimal(base_size = 13) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(face = "bold"),
plot.title = element_text(face = "bold"),
axis.text.y = element_blank(),
legend.position = "none",
plot.margin = margin(10, 30, 20, 20)
)
p
ggsave("figures/Fig8_pedestal.png", p, width = 6, height = 6)
# Base plot: pedestals
p <- ggplot(df, aes(x = label, y = score_klxh, fill = country)) +
geom_col(width = 0.7) +
# Score labels on the pedestals
geom_text(aes(label = paste0(score_klxh, " klx·h"), y = -5),
vjust = -0.35,
size = 4.2, fontface = "bold") +
geom_hline(yintercept = 0) +
# Flags slightly above each pedestal top
# ggflags wants numeric x; convert discrete x to numeric positions
geom_flag(
aes(x = as.numeric(label),
y = score_klxh + max(score_klxh) * 0.15,
country = iso2),
size = 14
) +
scale_fill_manual(values = country_colors) +
labs(
title = "Run for the Sun - 48h category - Winners’ Podium",
subtitle = "Pedestal height shows total light exposure (klx·h)",
x = NULL, y = NULL
) +
coord_cartesian(ylim = c(0, max(df$score_klxh) * 1.25), clip = "off") +
theme_minimal(base_size = 13) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(face = "bold"),
plot.title = element_text(face = "bold"),
axis.text.y = element_blank(),
legend.position = "none",
plot.margin = margin(10, 30, 20, 20)
)
p
ggsave("figures/Fig8_pedestal.png", p, width = 6, height = 6)
# Base plot: pedestals
p <- ggplot(df, aes(x = label, y = score_klxh, fill = country)) +
geom_col(width = 0.7) +
# Score labels on the pedestals
geom_text(aes(label = paste0(score_klxh, " klx·h"), y = -7),
vjust = -0.35,
size = 4.2, fontface = "bold") +
geom_hline(yintercept = 0) +
# Flags slightly above each pedestal top
# ggflags wants numeric x; convert discrete x to numeric positions
geom_flag(
aes(x = as.numeric(label),
y = score_klxh + max(score_klxh) * 0.15,
country = iso2),
size = 14
) +
scale_fill_manual(values = country_colors) +
labs(
title = "Run for the Sun - 48h category - Winners’ Podium",
subtitle = "Pedestal height shows total light exposure (klx·h)",
x = NULL, y = NULL
) +
coord_cartesian(ylim = c(0, max(df$score_klxh) * 1.25), clip = "off") +
theme_minimal(base_size = 13) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(face = "bold"),
plot.title = element_text(face = "bold"),
axis.text.y = element_blank(),
legend.position = "none",
plot.margin = margin(10, 30, 20, 20)
)
p
ggsave("figures/Fig8_pedestal.png", p, width = 6, height = 6)
# Base plot: pedestals
p <- ggplot(df, aes(x = label, y = score_klxh, fill = country)) +
geom_col(width = 0.7) +
# Score labels on the pedestals
geom_text(aes(label = paste0(score_klxh, " klx·h"), y = -6),
vjust = -0.35,
size = 4.2, fontface = "bold") +
geom_hline(yintercept = 0) +
# Flags slightly above each pedestal top
# ggflags wants numeric x; convert discrete x to numeric positions
geom_flag(
aes(x = as.numeric(label),
y = score_klxh + max(score_klxh) * 0.15,
country = iso2),
size = 14
) +
scale_fill_manual(values = country_colors) +
labs(
title = "Run for the Sun - 48h category - Winners’ Podium",
subtitle = "Pedestal height shows total light exposure (klx·h)",
x = NULL, y = NULL
) +
coord_cartesian(ylim = c(0, max(df$score_klxh) * 1.25), clip = "off") +
theme_minimal(base_size = 13) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(face = "bold"),
plot.title = element_text(face = "bold"),
axis.text.y = element_blank(),
legend.position = "none",
plot.margin = margin(10, 30, 20, 20)
)
p
ggsave("figures/Fig8_pedestal.png", p, width = 7, height = 6)
# Base plot: pedestals
p <- ggplot(df, aes(x = label, y = score_klxh, fill = country)) +
geom_col(width = 0.7) +
# Score labels on the pedestals
geom_text(aes(label = paste0(score_klxh, " klx·h"), y = -6),
vjust = -0.35,
size = 4.2, fontface = "bold") +
geom_hline(yintercept = 0) +
# Flags slightly above each pedestal top
# ggflags wants numeric x; convert discrete x to numeric positions
geom_flag(
aes(x = as.numeric(label),
y = score_klxh + max(score_klxh) * 0.10,
country = iso2),
size = 18
) +
scale_fill_manual(values = country_colors) +
labs(
title = "Run for the Sun 2025 - 48h category - Winners’ Podium",
subtitle = "Pedestal height shows total light exposure (klx·h)",
x = NULL, y = NULL
) +
coord_cartesian(ylim = c(0, max(df$score_klxh) * 1.25), clip = "off") +
theme_minimal(base_size = 13) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(face = "bold"),
plot.title = element_text(face = "bold"),
axis.text.y = element_blank(),
legend.position = "none",
plot.margin = margin(10, 30, 20, 20)
)
p
ggsave("figures/Fig8_pedestal.png", p, width = 7, height = 6)
# Base plot: pedestals
p <- ggplot(df, aes(x = label, y = score_klxh, fill = country)) +
geom_col(width = 0.7) +
# Score labels on the pedestals
geom_text(aes(label = paste0(score_klxh, " klx·h"), y = -6),
vjust = -0.35,
size = 4.2, fontface = "bold") +
geom_hline(yintercept = 0) +
# Flags slightly above each pedestal top
# ggflags wants numeric x; convert discrete x to numeric positions
geom_flag(
aes(x = as.numeric(label),
y = score_klxh + max(score_klxh) * 0.10,
country = iso2),
size = 18
) +
scale_fill_manual(values = country_colors) +
labs(
title = "Run for the Sun 2025 - 48h category",
subtitle = "Bar height shows total light exposure (klx·h)",
x = NULL, y = NULL
) +
coord_cartesian(ylim = c(0, max(df$score_klxh) * 1.25), clip = "off") +
theme_minimal(base_size = 13) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(face = "bold"),
plot.title = element_text(face = "bold"),
axis.text.y = element_blank(),
legend.position = "none",
plot.margin = margin(10, 30, 20, 20)
)
p
ggsave("figures/Fig8_pedestal.png", p, width = 7, height = 6)
# Base plot: pedestals
p <- ggplot(df, aes(x = label, y = score_klxh, fill = country)) +
geom_col(width = 0.7) +
# Score labels on the pedestals
geom_text(aes(label = paste0(score_klxh, " klx·h"), y = -6),
vjust = -0.35,
size = 4.2, fontface = "bold") +
geom_hline(yintercept = 0) +
# Flags slightly above each pedestal top
# ggflags wants numeric x; convert discrete x to numeric positions
geom_flag(
aes(x = as.numeric(label),
y = score_klxh + max(score_klxh) * 0.10,
country = iso2),
size = 18
) +
scale_fill_manual(values = country_colors) +
labs(
title = "Run for the sun 2025 - 48h category",
subtitle = "Bar height shows total light exposure (klx·h)",
x = NULL, y = NULL
) +
coord_cartesian(ylim = c(0, max(df$score_klxh) * 1.25), clip = "off") +
theme_minimal(base_size = 13) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(face = "bold"),
plot.title = element_text(face = "bold"),
axis.text.y = element_blank(),
legend.position = "none",
plot.margin = margin(10, 30, 20, 20)
)
p
ggsave("figures/Fig8_pedestal.png", p, width = 7, height = 6)
